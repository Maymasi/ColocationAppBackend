// <auto-generated />
using System;
using ColocationAppBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ColocationAppBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610114812_add-user-changes")]
    partial class adduserchanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ColocationAppBackend.Models.Annonce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Caution")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Charges")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DisponibleDe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DisponibleJusqu")
                        .HasColumnType("datetime2");

                    b.Property<int>("DureeMinMois")
                        .HasColumnType("int");

                    b.Property<int>("LogementId")
                        .HasColumnType("int");

                    b.Property<int>("NbVues")
                        .HasColumnType("int");

                    b.Property<int>("OccupantsMax")
                        .HasColumnType("int");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LogementId")
                        .IsUnique();

                    b.ToTable("Annonces");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Colocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateDebutDisponibilite")
                        .HasColumnType("datetime2");

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("Preferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtudiantId");

                    b.ToTable("Colocations");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDernierMessage")
                        .HasColumnType("datetime2");

                    b.Property<string>("DernierMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Utilisateur1Id")
                        .HasColumnType("int");

                    b.Property<int>("Utilisateur2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Utilisateur1Id");

                    b.HasIndex("Utilisateur2Id");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.DemandeColocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateEmmenagement")
                        .HasColumnType("datetime2");

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Preferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtudiantId");

                    b.ToTable("DemandesColocation");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Favori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnnonceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<int?>("OffreColocationId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnnonceId");

                    b.HasIndex("EtudiantId");

                    b.HasIndex("OffreColocationId");

                    b.ToTable("Favoris");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Logement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AnimauxAutorises")
                        .HasColumnType("bit");

                    b.Property<bool>("ChargesIncluses")
                        .HasColumnType("bit");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstMeuble")
                        .HasColumnType("bit");

                    b.Property<int?>("Etage")
                        .HasColumnType("int");

                    b.Property<bool>("FumeurAutorise")
                        .HasColumnType("bit");

                    b.Property<bool>("InternetInclus")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int>("NbChambres")
                        .HasColumnType("int");

                    b.Property<int?>("NbEtagesTotal")
                        .HasColumnType("int");

                    b.Property<int?>("NbSallesBain")
                        .HasColumnType("int");

                    b.Property<bool>("ParkingDisponible")
                        .HasColumnType("bit");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProprietaireId")
                        .HasColumnType("int");

                    b.Property<decimal>("Surface")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProprietaireId");

                    b.ToTable("Logements");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLecture")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstLu")
                        .HasColumnType("bit");

                    b.Property<int>("ExpediteurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("ExpediteurId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnnonceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnnonceId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.ReseauSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<string>("Lien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EtudiantId");

                    b.ToTable("ReseauxSociaux");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Signalement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnnonceSignaleeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolution")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignalement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResoluParId")
                        .HasColumnType("int");

                    b.Property<int>("SignaleurId")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurSignaleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnnonceSignaleeId");

                    b.HasIndex("ResoluParId");

                    b.HasIndex("SignaleurId");

                    b.HasIndex("UtilisateurSignaleId");

                    b.ToTable("Signalments");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DernierConnexion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<bool>("EstVerifie")
                        .HasColumnType("bit");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");

                    b.HasDiscriminator().HasValue("Utilisateur");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Administrateur", b =>
                {
                    b.HasBaseType("ColocationAppBackend.Models.Utilisateur");

                    b.HasDiscriminator().HasValue("Administrateur");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Etudiant", b =>
                {
                    b.HasBaseType("ColocationAppBackend.Models.Utilisateur");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.PrimitiveCollection<string>("CentresInteret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomaineEtudes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Habitudes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiveauEtudes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("StyleDeVie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Universite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Utilisateurs", t =>
                        {
                            t.Property("Adresse")
                                .HasColumnName("Etudiant_Adresse");
                        });

                    b.HasDiscriminator().HasValue("Etudiant");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Proprietaire", b =>
                {
                    b.HasBaseType("ColocationAppBackend.Models.Utilisateur");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NombreProprietes")
                        .HasColumnType("int");

                    b.Property<decimal>("NoteGlobale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Proprietaire");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Annonce", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Logement", "Logement")
                        .WithOne("Annonce")
                        .HasForeignKey("ColocationAppBackend.Models.Annonce", "LogementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Logement");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Colocation", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Etudiant", "Etudiant")
                        .WithMany("Colocations")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Conversation", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Utilisateur", "Utilisateur1")
                        .WithMany("ConversationsParticipant1")
                        .HasForeignKey("Utilisateur1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ColocationAppBackend.Models.Utilisateur", "Utilisateur2")
                        .WithMany("ConversationsParticipant2")
                        .HasForeignKey("Utilisateur2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilisateur1");

                    b.Navigation("Utilisateur2");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.DemandeColocation", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Etudiant", "Etudiant")
                        .WithMany("DemandesColocations")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Favori", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Annonce", "Annonce")
                        .WithMany()
                        .HasForeignKey("AnnonceId");

                    b.HasOne("ColocationAppBackend.Models.Etudiant", "Etudiant")
                        .WithMany("Favoris")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColocationAppBackend.Models.Colocation", "OffreColocation")
                        .WithMany()
                        .HasForeignKey("OffreColocationId");

                    b.Navigation("Annonce");

                    b.Navigation("Etudiant");

                    b.Navigation("OffreColocation");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Logement", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Proprietaire", "Proprietaire")
                        .WithMany("Logements")
                        .HasForeignKey("ProprietaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprietaire");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Message", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColocationAppBackend.Models.Utilisateur", "Expediteur")
                        .WithMany()
                        .HasForeignKey("ExpediteurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("Expediteur");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Photo", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Annonce", "Annonce")
                        .WithMany("Photos")
                        .HasForeignKey("AnnonceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Annonce");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.ReseauSocial", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Etudiant", "Etudiant")
                        .WithMany("ReseauxSociaux")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Signalement", b =>
                {
                    b.HasOne("ColocationAppBackend.Models.Annonce", "AnnonceSignalee")
                        .WithMany("Signalements")
                        .HasForeignKey("AnnonceSignaleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColocationAppBackend.Models.Utilisateur", "ResoluPar")
                        .WithMany("SignalementsTraites")
                        .HasForeignKey("ResoluParId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ColocationAppBackend.Models.Utilisateur", "Signaleur")
                        .WithMany("SignalementsEnvoyes")
                        .HasForeignKey("SignaleurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ColocationAppBackend.Models.Utilisateur", "UtilisateurSignale")
                        .WithMany("SignalementsRecus")
                        .HasForeignKey("UtilisateurSignaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnnonceSignalee");

                    b.Navigation("ResoluPar");

                    b.Navigation("Signaleur");

                    b.Navigation("UtilisateurSignale");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Annonce", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Signalements");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Logement", b =>
                {
                    b.Navigation("Annonce")
                        .IsRequired();
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Utilisateur", b =>
                {
                    b.Navigation("ConversationsParticipant1");

                    b.Navigation("ConversationsParticipant2");

                    b.Navigation("SignalementsEnvoyes");

                    b.Navigation("SignalementsRecus");

                    b.Navigation("SignalementsTraites");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Etudiant", b =>
                {
                    b.Navigation("Colocations");

                    b.Navigation("DemandesColocations");

                    b.Navigation("Favoris");

                    b.Navigation("ReseauxSociaux");
                });

            modelBuilder.Entity("ColocationAppBackend.Models.Proprietaire", b =>
                {
                    b.Navigation("Logements");
                });
#pragma warning restore 612, 618
        }
    }
}
